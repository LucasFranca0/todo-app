services:
  postgres:
    image: postgres:latest
    container_name: postgres-todo
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck: # Verifica se o PostgreSQL está pronto
      test: [ "CMD-SHELL", "pg_isready -U postgres -d todo_db" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spring-backend
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy  # Só inicia após o PostgreSQL estar pronto
    environment:
      - SPRING_DATASOURCE_URL=${DB_URL}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE=2
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=10
      - SPRING_JPA_HIBERNATE_DDL-AUTO= validate
      - SPRING_FLYWAY_ENABLED= true
      - SPRING_FLYWAY_LOCATIONS= classpath:db/migration
    env_file: .env
volumes:
  postgres_data: